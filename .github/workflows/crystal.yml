name: mpi.cr CI

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        vendor: [mpich-3.3.2, mpich-3.2.1, openmpi-4.0.3, openmpi-3.1.6, openmpi-3.0.6]

    container:
      image: crystallang/crystal

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v1
        id: cache-dep
        with:
          path: ${GITHUB_WORKSPACE}/${{ matrix.vendor }}
          key: ${{ matrix.vendor }}

      - name: Install dependencies
        env:
          CACHE_HIT: ${{ steps.cache-dep.outputs.cache-hit }}
        run: |
          if [ ${CACHE_HIT} = true ]
          then
            echo "MPI library already installed: ${PACKAGE_NAME}"
            cp -r ${GITHUB_WORKSPACE}/${{ matrix.vendor }} "${HOME}/opt/${{ matrix.vendor }}"
            exit 0
          else
            sudo apt update
            declare -a mpi_vendor_array=($(echo "${{ matrix.vendor }}" | tr "-" "\n"))
            export MPI_LIBRARY="${mpi_vendor_array[1]}"
            export MPI_LIBRARY_VERSION="${mpi_vendor_array[2]}"
            sudo apt-get -yq --no-install-suggests --no-install-recommends install build-essential gfortran wget
            sh ci/install-mpi.sh
            cp -r "${HOME}/opt/${{ matrix.vendor }}-${{ matrix.version }}" ${GITHUB_WORKSPACE}/${{ matrix.vendor }}
          fi
      - name: Run tests
        run: |
          export MPI_PREFIX="${HOME}/opt/${{ matrix.vendor }}"
          export PATH="${MPI_PREFIX}/bin:${PATH}"
          export LD_LIBRARY_PATH="${MPI_PREFIX}/lib:${LD_LIBRARY_PATH}"
          export LIBRARY_PATH="${MPI_PREFIX}/lib:${LIBRARY_PATH}"
          make
          make spec no-debug=1
