name: mpi.cr CI

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        vendor: [mpich, openmpi]
        version: [3.3, 3.2.1, 3.0.4, 3.1.4, 4.0.1]
        exclude:
          - vendor: mpich
            version: 4.0.1
          - vendor: mpich
            version: 3.1.4
          - vendor: mpich
            version: 3.0.4
          - vendor: openmpi
            version: 3.3
          - vendor: openmpi
            version: 3.2.1

    container:
      image: crystallang/crystal

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v1
        id: cache-dep
        with:
          path: ${{ matrix.vendor }}-${{ matrix.version }}
          key: ${{ matrix.vendor }}-${{ matrix.version }}

      - name: Install dependencies
        if: steps.cache-dep.outputs.cache-hit != 'true'
        env:
          MPI_LIBRARY: ${{ matrix.vendor }}
          MPI_LIBRARY_VERSION: ${{ matrix.version }}
        run: |
          apt update
          apt-get -yq --no-install-suggests --no-install-recommends install build-essential gfortran wget
          sh ci/install-mpi.sh

      - name: Run tests
        env:
          PATH: "${MPI_LIBRARY}-${MPI_LIBRARY_VERSION}/bin:${PATH}"
          LD_LIBRARY_PATH: "${MPI_LIBRARY}-${MPI_LIBRARY_VERSION}/lib:${LD_LIBRARY_PATH}"
          LIBRARY_PATH: "${MPI_LIBRARY}-${MPI_LIBRARY_VERSION}/lib:${LIBRARY_PATH}"
        run: |
          make
          make spec no-debug=1
